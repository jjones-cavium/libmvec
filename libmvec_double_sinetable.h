/* Copyright (c) 2018, Marvell Technology Group Ltd.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// there are 128 doubles prior to the end of the sine table.
// (256 entries).  So the cos table is 1/4 phase further, and
// thus starts at _sin_table[64].  Remember that each "full entry"
// is 4 doubles, thus the total table is 32 entries 0 - 2*PI!
//

#ifdef BIG_ENDI
#define ENDIANPAIR(h,l) h,l
#else
#define ENDIANPAIR(h,l) l,h
#endif

static const __attribute__ ((aligned(64))) uint32_t _sin_table[] = {
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3FF00000, 0x00000000),	// .(1.)
	ENDIANPAIR(0xBFC921FB, 0x54442D18),	// .(-.19634954084936206975)
	ENDIANPAIR(0xBC61A626, 0x33145C07),	// .(-76540424946709575448.0E-37)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3FF00000, 0x00000000),	// .(1.)
	ENDIANPAIR(0xBE3CEE6D, 0x677614EB),	// .(-67361064429346623593.0E-28)
	ENDIANPAIR(0x3AD8D251, 0xF0C27ED4),	// .(32081118018144953524.0E-44)
	ENDIANPAIR(0x3FD87DE2, 0xA0000000),	// .(.38268342614173889160)
	ENDIANPAIR(0x3FED906B, 0xD094D76B),	// .(.92387953508908304823)
	ENDIANPAIR(0x3E4E65D6, 0xD3D8481A),	// .(14155082990320593876.0E-27)
	ENDIANPAIR(0xBAED5877, 0xAED3B734),	// .(-75856536595011685808.0E-44)
	ENDIANPAIR(0x3FE1C73B, 0x40000000),	// .(.55557024478912353516)
	ENDIANPAIR(0x3FEA9B66, 0x24D5CAB5),	// .(.83146960443840234323)
	ENDIANPAIR(0xBE526055, 0xC0000001),	// .(-17114270889351249605.0E-27)
	ENDIANPAIR(0xBAA47D9A, 0xBECBBC32),	// .(-33104418349151144341.0E-45)
	ENDIANPAIR(0x3FE6A09E, 0x60000000),	// .(.70710676908493041992)
	ENDIANPAIR(0x3FE6A09E, 0x6CFE7797),	// .(.70710679328816439249)
	ENDIANPAIR(0xBE604D6D, 0x186FE5F6),	// .(-30365671803378754871.0E-27)
	ENDIANPAIR(0xBAF38FA9, 0xED937AF2),	// .(-10112896470058974239.0E-43)
	ENDIANPAIR(0x3FEA9B66, 0x20000000),	// .(.83146959543228149414)
	ENDIANPAIR(0x3FE1C73B, 0x473C7C7E),	// .(.55557025826773531740)
	ENDIANPAIR(0xBE73DB40, 0x2154C351),	// .(-73971030485587905688.0E-27)
	ENDIANPAIR(0x3AF140FA, 0xFFE5F888),	// .(89200210168262864103.0E-44)
	ENDIANPAIR(0x3FED906B, 0xC0000000),	// .(.92387950420379638672)
	ENDIANPAIR(0x3FD87DE2, 0xF00FE7E2),	// .(.38268350070540979591)
	ENDIANPAIR(0xBE8475C7, 0x990ABFCE),	// .(-15243945174691706835.0E-26)
	ENDIANPAIR(0xBB0EA58C, 0xD2FE7B05),	// .(-31687924477517056442.0E-43)
	ENDIANPAIR(0x3FEF6297, 0xC0000000),	// .(.98078525066375732422)
	ENDIANPAIR(0x3FC8F8B9, 0x7D7BD7BD),	// .(.19509047152649641732)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3FF00000, 0x00000000),	// .(1.)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3E8475C7, 0x990ABFCE),	// .(15243945174691706835.0E-26)
	ENDIANPAIR(0x3B0EA58C, 0xD2FE7B05),	// .(31687924477517056442.0E-43)
	ENDIANPAIR(0x3FEF6297, 0xC0000000),	// .(.98078525066375732422)
	ENDIANPAIR(0xBFC8F8B9, 0x7D7BD7BD),	// .(-.19509047152649641732)
	ENDIANPAIR(0x3E73DB40, 0x2154C351),	// .(73971030485587905688.0E-27)
	ENDIANPAIR(0xBAF140FA, 0xFFE5F888),	// .(-89200210168262864103.0E-44)
	ENDIANPAIR(0x3FED906B, 0xC0000000),	// .(.92387950420379638672)
	ENDIANPAIR(0xBFD87DE2, 0xF00FE7E2),	// .(-.38268350070540979591)
	ENDIANPAIR(0x3E604D6D, 0x186FE5F6),	// .(30365671803378754871.0E-27)
	ENDIANPAIR(0x3AF38FA9, 0xED937AF2),	// .(10112896470058974239.0E-43)
	ENDIANPAIR(0x3FEA9B66, 0x20000000),	// .(.83146959543228149414)
	ENDIANPAIR(0xBFE1C73B, 0x473C7C7E),	// .(-.55557025826773531740)
	ENDIANPAIR(0x3E526055, 0xC0000001),	// .(17114270889351249605.0E-27)
	ENDIANPAIR(0x3AA47D9A, 0xBECBBC32),	// .(33104418349151144341.0E-45)
	ENDIANPAIR(0x3FE6A09E, 0x60000000),	// .(.70710676908493041992)
	ENDIANPAIR(0xBFE6A09E, 0x6CFE7797),	// .(-.70710679328816439249)
	ENDIANPAIR(0xBE4E65D6, 0xD3D8481A),	// .(-14155082990320593876.0E-27)
	ENDIANPAIR(0x3AED5877, 0xAED3B734),	// .(75856536595011685808.0E-44)
	ENDIANPAIR(0x3FE1C73B, 0x40000000),	// .(.55557024478912353516)
	ENDIANPAIR(0xBFEA9B66, 0x24D5CAB5),	// .(-.83146960443840234323)
	ENDIANPAIR(0x3E3CEE6D, 0x677614EB),	// .(67361064429346623593.0E-28)
	ENDIANPAIR(0xBAD8D251, 0xF0C27ED4),	// .(-32081118018144953524.0E-44)
	ENDIANPAIR(0x3FD87DE2, 0xA0000000),	// .(.38268342614173889160)
	ENDIANPAIR(0xBFED906B, 0xD094D76B),	// .(-.92387953508908304823)
	ENDIANPAIR(0x3FC921FB, 0x54442D18),	// .(.19634954084936206975)
	ENDIANPAIR(0x3C61A626, 0x33145C07),	// .(76540424946709575448.0E-37)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0xBFF00000, 0x00000000),	// .(-1.)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0xBFF00000, 0x00000000),	// .(-1.)
	ENDIANPAIR(0xBFC921FB, 0x54442D18),	// .(-.19634954084936206975)
	ENDIANPAIR(0xBC61A626, 0x33145C07),	// .(-76540424946709575448.0E-37)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0xBFF00000, 0x00000000),	// .(-1.)
	ENDIANPAIR(0xBE3CEE6D, 0x677614EB),	// .(-67361064429346623593.0E-28)
	ENDIANPAIR(0x3AD8D251, 0xF0C27ED4),	// .(32081118018144953524.0E-44)
	ENDIANPAIR(0xBFD87DE2, 0xA0000000),	// .(-.38268342614173889160)
	ENDIANPAIR(0xBFED906B, 0xD094D76B),	// .(-.92387953508908304823)
	ENDIANPAIR(0x3E4E65D6, 0xD3D8481A),	// .(14155082990320593876.0E-27)
	ENDIANPAIR(0xBAED5877, 0xAED3B734),	// .(-75856536595011685808.0E-44)
	ENDIANPAIR(0xBFE1C73B, 0x40000000),	// .(-.55557024478912353516)
	ENDIANPAIR(0xBFEA9B66, 0x24D5CAB5),	// .(-.83146960443840234323)
	ENDIANPAIR(0xBE526055, 0xC0000001),	// .(-17114270889351249605.0E-27)
	ENDIANPAIR(0xBAA47D9A, 0xBECBBC32),	// .(-33104418349151144341.0E-45)
	ENDIANPAIR(0xBFE6A09E, 0x60000000),	// .(-.70710676908493041992)
	ENDIANPAIR(0xBFE6A09E, 0x6CFE7797),	// .(-.70710679328816439249)
	ENDIANPAIR(0xBE604D6D, 0x186FE5F6),	// .(-30365671803378754871.0E-27)
	ENDIANPAIR(0xBAF38FA9, 0xED937AF2),	// .(-10112896470058974239.0E-43)
	ENDIANPAIR(0xBFEA9B66, 0x20000000),	// .(-.83146959543228149414)
	ENDIANPAIR(0xBFE1C73B, 0x473C7C7E),	// .(-.55557025826773531740)
	ENDIANPAIR(0xBE73DB40, 0x2154C351),	// .(-73971030485587905688.0E-27)
	ENDIANPAIR(0x3AF140FA, 0xFFE5F888),	// .(89200210168262864103.0E-44)
	ENDIANPAIR(0xBFED906B, 0xC0000000),	// .(-.92387950420379638672)
	ENDIANPAIR(0xBFD87DE2, 0xF00FE7E2),	// .(-.38268350070540979591)
	ENDIANPAIR(0xBE8475C7, 0x990ABFCE),	// .(-15243945174691706835.0E-26)
	ENDIANPAIR(0xBB0EA58C, 0xD2FE7B05),	// .(-31687924477517056442.0E-43)
	ENDIANPAIR(0xBFEF6297, 0xC0000000),	// .(-.98078525066375732422)
	ENDIANPAIR(0xBFC8F8B9, 0x7D7BD7BD),	// .(-.19509047152649641732)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0xBFF00000, 0x00000000),	// .(-1.)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3E8475C7, 0x990ABFCE),	// .(15243945174691706835.0E-26)
	ENDIANPAIR(0x3B0EA58C, 0xD2FE7B05),	// .(31687924477517056442.0E-43)
	ENDIANPAIR(0xBFEF6297, 0xC0000000),	// .(-.98078525066375732422)
	ENDIANPAIR(0x3FC8F8B9, 0x7D7BD7BD),	// .(.19509047152649641732)
	ENDIANPAIR(0x3E73DB40, 0x2154C351),	// .(73971030485587905688.0E-27)
	ENDIANPAIR(0xBAF140FA, 0xFFE5F888),	// .(-89200210168262864103.0E-44)
	ENDIANPAIR(0xBFED906B, 0xC0000000),	// .(-.92387950420379638672)
	ENDIANPAIR(0x3FD87DE2, 0xF00FE7E2),	// .(.38268350070540979591)
	ENDIANPAIR(0x3E604D6D, 0x186FE5F6),	// .(30365671803378754871.0E-27)
	ENDIANPAIR(0x3AF38FA9, 0xED937AF2),	// .(10112896470058974239.0E-43)
	ENDIANPAIR(0xBFEA9B66, 0x20000000),	// .(-.83146959543228149414)
	ENDIANPAIR(0x3FE1C73B, 0x473C7C7E),	// .(.55557025826773531740)
	ENDIANPAIR(0x3E526055, 0xC0000001),	// .(17114270889351249605.0E-27)
	ENDIANPAIR(0x3AA47D9A, 0xBECBBC32),	// .(33104418349151144341.0E-45)
	ENDIANPAIR(0xBFE6A09E, 0x60000000),	// .(-.70710676908493041992)
	ENDIANPAIR(0x3FE6A09E, 0x6CFE7797),	// .(.70710679328816439249)
	ENDIANPAIR(0xBE4E65D6, 0xD3D8481A),	// .(-14155082990320593876.0E-27)
	ENDIANPAIR(0x3AED5877, 0xAED3B734),	// .(75856536595011685808.0E-44)
	ENDIANPAIR(0xBFE1C73B, 0x40000000),	// .(-.55557024478912353516)
	ENDIANPAIR(0x3FEA9B66, 0x24D5CAB5),	// .(.83146960443840234323)
	ENDIANPAIR(0x3E3CEE6D, 0x677614EB),	// .(67361064429346623593.0E-28)
	ENDIANPAIR(0xBAD8D251, 0xF0C27ED4),	// .(-32081118018144953524.0E-44)
	ENDIANPAIR(0xBFD87DE2, 0xA0000000),	// .(-.38268342614173889160)
	ENDIANPAIR(0x3FED906B, 0xD094D76B),	// .(.92387953508908304823)
	ENDIANPAIR(0x3FC921FB, 0x54442D18),	// .(.19634954084936206975)
	ENDIANPAIR(0x3C61A626, 0x33145C07),	// .(76540424946709575448.0E-37)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3FF00000, 0x00000000),	// .(1.)
// _sin_table_end:
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3FF00000, 0x00000000),	// .(1.)
	ENDIANPAIR(0xBFC921FB, 0x54442D18),	// .(-.19634954084936206975)
	ENDIANPAIR(0xBC61A626, 0x33145C07),	// .(-76540424946709575448.0E-37)
	ENDIANPAIR(0x00000000, 0x00000000),	// 0
	ENDIANPAIR(0x3FF00000, 0x00000000),	// .(1.)
	ENDIANPAIR(0xBE3CEE6D, 0x677614EB),	// .(-67361064429346623593.0E-28)
	ENDIANPAIR(0x3AD8D251, 0xF0C27ED4),	// .(32081118018144953524.0E-44)
	ENDIANPAIR(0x3FD87DE2, 0xA0000000),	// .(.38268342614173889160)
	ENDIANPAIR(0x3FED906B, 0xD094D76B),	// .(.92387953508908304823)
	ENDIANPAIR(0x3E4E65D6, 0xD3D8481A),	// .(14155082990320593876.0E-27)
	ENDIANPAIR(0xBAED5877, 0xAED3B734),	// .(-75856536595011685808.0E-44)
	ENDIANPAIR(0x3FE1C73B, 0x40000000),	// .(.55557024478912353516)
	ENDIANPAIR(0x3FEA9B66, 0x24D5CAB5),	// .(.83146960443840234323)
	ENDIANPAIR(0xBE526055, 0xC0000001),	// .(-17114270889351249605.0E-27)
	ENDIANPAIR(0xBAA47D9A, 0xBECBBC32),	// .(-33104418349151144341.0E-45)
	ENDIANPAIR(0x3FE6A09E, 0x60000000),	// .(.70710676908493041992)
	ENDIANPAIR(0x3FE6A09E, 0x6CFE7797),	// .(.70710679328816439249)
	ENDIANPAIR(0xBE604D6D, 0x186FE5F6),	// .(-30365671803378754871.0E-27)
	ENDIANPAIR(0xBAF38FA9, 0xED937AF2),	// .(-10112896470058974239.0E-43)
	ENDIANPAIR(0x3FEA9B66, 0x20000000),	// .(.83146959543228149414)
	ENDIANPAIR(0x3FE1C73B, 0x473C7C7E),	// .(.55557025826773531740)
	ENDIANPAIR(0xBE73DB40, 0x2154C351),	// .(-73971030485587905688.0E-27)
	ENDIANPAIR(0x3AF140FA, 0xFFE5F888),	// .(89200210168262864103.0E-44)
	ENDIANPAIR(0x3FED906B, 0xC0000000),	// .(.92387950420379638672)
	ENDIANPAIR(0x3FD87DE2, 0xF00FE7E2),	// .(.38268350070540979591)
	ENDIANPAIR(0xBE8475C7, 0x990ABFCE),	// .(-15243945174691706835.0E-26)
	ENDIANPAIR(0xBB0EA58C, 0xD2FE7B05),	// .(-31687924477517056442.0E-43)
	ENDIANPAIR(0x3FEF6297, 0xC0000000),	// .(.98078525066375732422)
	ENDIANPAIR(0x3FC8F8B9, 0x7D7BD7BD)	// .(.19509047152649641732)
};

// Sine polynomial coefficients:
static const __attribute__ ((aligned(64))) uint32_t _sin_poly[] = {
	ENDIANPAIR(0xBFC55555, 0x55555553), /* -.16666666666666660190       */
	ENDIANPAIR(0x3F811111, 0x11110118), /* 83333333333262399334.0E-22   */
	ENDIANPAIR(0xBF2A01A0, 0x195A7DA4), /* -19841269811580769956.0E-23  */
	ENDIANPAIR(0x3EC71DE0, 0x8E8479A9), /* 27557263032738986415.0E-25   */
	ENDIANPAIR(0xBE5AD8CA, 0xD49BF21A), /* -25003072757166118582.0E-27  */
};

// Cosine polynomial coefficients:
static const __attribute__ ((aligned(64))) uint32_t _cos_poly[] = {
	ENDIANPAIR(0xBFDFFFFF, 0xFFFFFFF1), /* -.49999999999999916733       */
	ENDIANPAIR(0x3FA55555, 0x55552102), /* 41666666666573717870.0E-21   */
	ENDIANPAIR(0xBF56C16C, 0x15B069E2), /* -13888888850092030898.0E-22  */
	ENDIANPAIR(0x3EFA019B, 0x110979B6), /* 24801514032163448264.0E-24   */
	ENDIANPAIR(0xBE927358, 0x78AA5ACF), /* -27493489855019260053.0E-26  */
};

// Modulus for reduction (2*Pi/32):
static const __attribute__ ((aligned(64))) uint32_t _modulus[] = {
	ENDIANPAIR(0x3FC921FB, 0x54442D18), /* .19634954084936206975        */
	ENDIANPAIR(0x3FC921FB, 0x54442D18), /* .19634954084936206975        */
	ENDIANPAIR(0x3C61A626, 0x33145C07), /* 76540424946709575448.0E-37   */
	ENDIANPAIR(0x3C61A626, 0x33145C07), /* 76540424946709575448.0E-37   */
	ENDIANPAIR(0xB8EF1976, 0xB7ED8FBC), /* -18717311310739622912.0E-53  */
	ENDIANPAIR(0xB8EF1976, 0xB7ED8FBC)  /* -18717311310739622912.0E-53  */
};
static const __attribute__ ((aligned(64))) uint32_t _vmod[] = {
	ENDIANPAIR(0x40145F30, 0x6DC9C883), /* 5.0929581789406507445 */
	ENDIANPAIR(0x40145F30, 0x6DC9C883)  /* 5.0929581789406507445 */
};

// Cosine table is one-quarter phase beyond sine table:
// _cos_table	=	_sin_table + (_sin_table_end-_sin_table)/4
static const uint32_t *_cos_table = &_sin_table[64];
